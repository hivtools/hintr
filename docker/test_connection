#!/usr/bin/env bash
set -ex
HERE=$(dirname $0)
. $HERE/common

# In case we switch agents between steps or tag has been updated
docker pull $TAG_SHA

NAME_REDIS=hintr_redis
NAME_SERVER=hintr_server
NAME_NETWORK=hintr_network
NAME_VOLUME=hintr_volume

function cleanup {
    echo "Cleaning up"
    docker kill $NAME_REDIS > /dev/null || true
    docker kill $NAME_SERVER > /dev/null || true
    docker kill $NAME_HINTR_TESTS > /dev/null || true
    docker network rm $NAME_NETWORK > /dev/null || true
    docker volume rm $NAME_VOLUME > /dev/null || true
}

trap cleanup EXIT

docker network create $NAME_NETWORK
docker volume create $NAME_VOLUME

docker run --rm -d --network=$NAME_NETWORK --network-alias=redis \
       --name hintr_redis redis

docker run --rm -d --network=$NAME_NETWORK \
       -p 8888:8888 \
       -e REDIS_URL=redis://redis:6379 \
       -e USE_MOCK_MODEL=true \
       --mount type=volume,src=$NAME_VOLUME,dst=/uploads \
       --mount type=volume,src=$NAME_VOLUME,dst=/results \
       --name $NAME_SERVER $TAG_SHA

## curl command will error with message
## curl: (56) Recv failure: Connection reset by peer
## if you try to get status before server is ready to
## accept connections. Ideally we would use curl --retry-all-errors
## but this only available in 7.71.0 which is not available
## in standard ubuntu package sources yet
function retry() {
    local -r -i max_attempts="$1"; shift
    local -i attempt_num=1
    until [[ $($@) == '{"status":"success","errors":null,"data":"Welcome to hintr"}' ]];
    do
        if ((attempt_num==max_attempts))
        then
            echo "Attempt $attempt_num failed and there are no more attempts left!"
            return 1
        else
            echo "Attempt $attempt_num failed! Trying again in $attempt_num seconds..."
            sleep $((attempt_num++))
        fi
    done
    echo "SUCCESS"
    exit 0
}

retry 10 curl --silent http://localhost:8888
