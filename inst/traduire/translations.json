{
    "en": {
        "translation": {
            "welcome": "Welcome to hintr",
            "invalid_country": "Invalid country",
            "invalid_iso3": "Can't read country from data of type {{type}}",
            "invalid_regions": "Can't read regions from data of type {{type}}",
            "model_submit_old": "Trying to run model with old version of options. Update model run options",
            "model_result_crash": "Worker has crashed - error details are unavailable",
            "error_404": "{{verb}} {{path}} is not a valid hintr path",
            "error_500": "Unexpected server error in '{{call}}' : '{{message}}' while doing '{{verb}} {{path}}'",
            "error_call_missing": "<call missing>",
            "filters_missing_age_group": "Age groups metadata contains 0 rows for age_group {{group}}. Speak to administrator.",
            "filters_cant_get_indicator": "Can't get indicator filters for data type {{type}}.",
            "filters_no_matching": "Found no matching filters for type {{type}}",
            "filters_no_display_name": "Failed to get display name for hint ID {{id}}.",
            "filters_incorrect_type": "Property {{name}} is incorrect type, should be {{type}}",
            "filters_incorrect_tree": "Got {{n}} root nodes - tree must have 1 root.",
            "filters_cant_get_hint_id": "Failed to locate hint ID from naomi_id {{id}}",
            "indicators_row_error": "Found {{nrow}} rows in metadata for data type {{type}} and indicator {{indicator}}. Should be exactly one.",
            "model_options_fail": "Failed to construct model options from template and params:\n{{message}}",
            "pjnz_invalid_zip": "Zip contains non PJNZ files: \n{{not_pjnz}}",
            "run_model_mock_start": "Started mock model",
            "run_model_mock_finish": "Finished mock model",
            "inputs_pjnz_zip_mixed": "Zip contains PJNZs for mixed countries, got {{countries}}",
            "inputs_pjnz_zip_region0": "Zip contains {{count}} PJNZ files with spectrum region code 0. Should be max 1 PJNZ with spectrum region code 0 got:\n{{err}}",
            "validation_column_names": "Data missing {{count}} column {{missing}}",
            "validation_column_names_plural": "Data missing {{count}} columns {{missing}}",
            "validation_column_required": "Data does not contain required column: {{name}}",
            "validation_column_value_missing": "Column {{name}} is missing required values: {{missing}}",
            "validation_column_value_unexpected": "Unexpected values in column {{name}}: {{unexpected}}",
            "validation_column_matches": "Values in column {{name}} do not match required format: {{unmatched}}",
            "validation_column_no_na": "Found NA values in column {{name}}. NA values not allowed.",
            "validation_column_numeric": "Column {{name}} is required to be numeric. Non-numeric values were found.",
            "validation_column_positive": "Column {{name}} requires positive numeric values. Negative numeric values were found.",
            "validation_single_source": "Data should be from a single source. Multiple sources present: {{sources}}",
            "validation_anc_client_numbers1": "The number of people who tested positive is greater than the number of people tested",
            "validation_anc_client_numbers2": "The number of people already on ART is greater than the number positive (those known to be positive + those who tested positive)",
            "validation_unique_combinations": "Unique combinations are required for columns: {{columns}}",
            "validation_single_parent_region": "Should have located one parent regions but found regions {{regions}}.",
            "validation_single_country_no_regions": "{{type}} file contains no regions. Check file has an area_id column.",
            "validation_single_country_mutiple": "{{type}} file contains regions for more than one country. Got countries {{countries}}.",
            "validation_region_codes_valid": "Shape file contains {{count}} region with missing spectrum region code, code can only be missing for country level region.",
            "validation_region_codes_valid_plural": "Shape file contains {{count}} regions with missing spectrum region code, code can only be missing for country level region.",
            "validation_property_exists": "Shape file does not contain property {{property}} for each region. Missing ID for {{count}} feature.",
            "validation_property_exists_plural": "Shape file does not contain property {{property}} for each region. Missing ID for {{count}} features.",
            "validation_consistent_country": "Countries aren't consistent got {{country_x}} from {{source_x}} and {{country_y}} from {{source_y}}.",
            "validation_consistent_region": "Regions aren't consistent {{source}} file contains {{count}} region missing from shape file including:\n{{missing}}",
            "validation_consistent_region_plural": "Regions aren't consistent {{source}} file contains {{count}} regions missing from shape file including:\n{{missing}}",
            "validation_consistent_region_codes1": "Different spectrum region codes in PJNZ and shape file.",
            "validation_consistent_region_codes2": "{{count}} code in PJNZ missing from shape file: {{missing}}",
            "validation_consistent_region_codes2_plural": "{{count}} codes in PJNZ missing from shape file: {{missing}}",
            "validation_consistent_region_codes3": "{{count}} code in shape file missing from PJNZ: {{missing}}",
            "validation_consistent_region_codes3_plural": "{{count}} codes in shape file missing from PJNZ: {{missing}}",
            "validation_consistent_region_codes": "Different spectrum region codes in PJNZ and shape file.\n{{shape_no_missing}} {{shape_code_text}} in PJNZ missing from shape file: {{shape_missing_codes}}\n{{pjnz_no_missing}} {{pjnz_code_text}} in shape file missing from PJNZ: {{pjnz_missing_codes}}",
            "validation_file_exists": "File at path {{path}} does not exist. Create it, or fix the path.",
            "validation_file_extension": "File must be of type {{expected}}, got type {{got}}.",
            "queue_connecting": "Connecting to redis at {{redis}}",
            "queue_starting": "Starting queue",
            "queue_cache": "Creating cache",
            "queue_stopping_workers": "Stopping workers",
            "queue_id_not_set": "Environment variable 'HINTR_QUEUE_ID' is not set",
            "metadata_build_indicator": "Expected only 1 row for indicator, data type, plot type combination.\nCheck each combination is unique in configuration."
        }
    },
    "fr": {
        "translation": {
            "welcome": "Bienvenue à hintr",
            "invalid_country": "Payes invalide",
            "invalid_iso3": "Ce n'est pas possible à lire le payes de données de type {{type}}",
            "invalid_iso3": "Ce n'est pas possible à lire des regions de données de type {{type}}"
        }
    }
}
