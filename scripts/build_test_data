#!/usr/bin/env Rscript

paths <- list(model_output_path = "inst/output/malawi_model_output.rds",
              calibrate_plot_path = "inst/output/malawi_calibrate_plot_data.rds",
              calibrate_output_path = "inst/output/malawi_calibrate_output.rds",
              spectrum_path = "inst/output/malawi_spectrum_download.zip",
              coarse_output_path = "inst/output/malawi_coarse_output_download.zip",
              summary_report_path = "inst/output/malawi_summary_report.html")

dir.create("inst/output", showWarnings = FALSE)
invisible(lapply(paths, function(path) {
  if (file.exists(path)) {
    stop(sprintf("%s already exists - remove file if you want to regenerate test data.", path))
  }
}))

t <- tempfile()
version <- hintr:::to_json(hintr:::cfg$version_info)
download_payload <- readLines("./scripts/download_payload.json")
download_payload <- gsub("<version_info>", version, download_payload,
                         fixed = TRUE)
writeLines(download_payload, t)

out <- system2("./scripts/run_model",
  args = c(
    "--model-payload", "./scripts/model_payload.json",
    "--calibrate-payload", "./scripts/calibrate_payload.json",
    "--download-payload", t,
    "--model-output-path", paths$model_output_path,
    "--calibrate-output-path", paths$calibrate_output_path,
    "--calibrate-plot-path", paths$calibrate_plot_path,
    "--spectrum-path", paths$spectrum_path,
    "--coarse-output-path", paths$coarse_output_path,
    "--summary-report-path", paths$summary_report_path))

if (out != 0) {
  quit(save = "no", status = 1)
}
